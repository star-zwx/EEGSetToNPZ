# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainWindows.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(497, 678)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.groupBox_left_fileInfor = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_left_fileInfor.setGeometry(QtCore.QRect(30, 20, 261, 311))
        self.groupBox_left_fileInfor.setObjectName("groupBox_left_fileInfor")
        self.toolButton_filename = QtWidgets.QToolButton(self.groupBox_left_fileInfor)
        self.toolButton_filename.setGeometry(QtCore.QRect(10, 30, 101, 21))
        self.toolButton_filename.setObjectName("toolButton_filename")
        self.toolButton_filepath = QtWidgets.QToolButton(self.groupBox_left_fileInfor)
        self.toolButton_filepath.setGeometry(QtCore.QRect(10, 60, 101, 21))
        self.toolButton_filepath.setObjectName("toolButton_filepath")
        self.toolButton_filetype = QtWidgets.QToolButton(self.groupBox_left_fileInfor)
        self.toolButton_filetype.setGeometry(QtCore.QRect(10, 90, 101, 21))
        self.toolButton_filetype.setObjectName("toolButton_filetype")
        self.toolButton_numChannels = QtWidgets.QToolButton(self.groupBox_left_fileInfor)
        self.toolButton_numChannels.setGeometry(QtCore.QRect(10, 120, 101, 21))
        self.toolButton_numChannels.setObjectName("toolButton_numChannels")
        self.toolButton_numTrails = QtWidgets.QToolButton(self.groupBox_left_fileInfor)
        self.toolButton_numTrails.setGeometry(QtCore.QRect(10, 150, 101, 21))
        self.toolButton_numTrails.setObjectName("toolButton_numTrails")
        self.toolButton_sampleRate = QtWidgets.QToolButton(self.groupBox_left_fileInfor)
        self.toolButton_sampleRate.setGeometry(QtCore.QRect(10, 180, 101, 21))
        self.toolButton_sampleRate.setObjectName("toolButton_sampleRate")
        self.toolButton_samplenum_one = QtWidgets.QToolButton(self.groupBox_left_fileInfor)
        self.toolButton_samplenum_one.setGeometry(QtCore.QRect(10, 210, 101, 21))
        self.toolButton_samplenum_one.setObjectName("toolButton_samplenum_one")
        self.textEdit_InforPrint = QtWidgets.QTextEdit(self.groupBox_left_fileInfor)
        self.textEdit_InforPrint.setGeometry(QtCore.QRect(10, 250, 241, 51))
        self.textEdit_InforPrint.setObjectName("textEdit_InforPrint")
        self.lineEdit_filename = QtWidgets.QLineEdit(self.groupBox_left_fileInfor)
        self.lineEdit_filename.setGeometry(QtCore.QRect(110, 30, 141, 20))
        self.lineEdit_filename.setObjectName("lineEdit_filename")
        self.lineEdit_filepath = QtWidgets.QLineEdit(self.groupBox_left_fileInfor)
        self.lineEdit_filepath.setGeometry(QtCore.QRect(110, 60, 141, 20))
        self.lineEdit_filepath.setObjectName("lineEdit_filepath")
        self.lineEdit_fileType = QtWidgets.QLineEdit(self.groupBox_left_fileInfor)
        self.lineEdit_fileType.setGeometry(QtCore.QRect(110, 90, 141, 20))
        self.lineEdit_fileType.setObjectName("lineEdit_fileType")
        self.lineEdit_numChannels = QtWidgets.QLineEdit(self.groupBox_left_fileInfor)
        self.lineEdit_numChannels.setGeometry(QtCore.QRect(110, 120, 141, 20))
        self.lineEdit_numChannels.setObjectName("lineEdit_numChannels")
        self.lineEdit_numTrails = QtWidgets.QLineEdit(self.groupBox_left_fileInfor)
        self.lineEdit_numTrails.setGeometry(QtCore.QRect(110, 150, 141, 20))
        self.lineEdit_numTrails.setObjectName("lineEdit_numTrails")
        self.lineEdit_sampleRate = QtWidgets.QLineEdit(self.groupBox_left_fileInfor)
        self.lineEdit_sampleRate.setGeometry(QtCore.QRect(110, 180, 141, 20))
        self.lineEdit_sampleRate.setObjectName("lineEdit_sampleRate")
        self.lineEdit_samplenum_one = QtWidgets.QLineEdit(self.groupBox_left_fileInfor)
        self.lineEdit_samplenum_one.setGeometry(QtCore.QRect(110, 210, 141, 20))
        self.lineEdit_samplenum_one.setObjectName("lineEdit_samplenum_one")
        self.groupBox_right_button = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_right_button.setGeometry(QtCore.QRect(290, 20, 191, 311))
        self.groupBox_right_button.setObjectName("groupBox_right_button")
        self.pushButton_savepath = QtWidgets.QPushButton(self.groupBox_right_button)
        self.pushButton_savepath.setGeometry(QtCore.QRect(10, 70, 91, 23))
        self.pushButton_savepath.setObjectName("pushButton_savepath")
        self.lineEdit = QtWidgets.QLineEdit(self.groupBox_right_button)
        self.lineEdit.setGeometry(QtCore.QRect(10, 100, 171, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.textEdit_zhuyi = QtWidgets.QTextEdit(self.groupBox_right_button)
        self.textEdit_zhuyi.setGeometry(QtCore.QRect(10, 170, 171, 131))
        self.textEdit_zhuyi.setObjectName("textEdit_zhuyi")
        self.widget = QtWidgets.QWidget(self.groupBox_right_button)
        self.widget.setGeometry(QtCore.QRect(10, 20, 85, 40))
        self.widget.setObjectName("widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.radioButton_setToMat = QtWidgets.QRadioButton(self.widget)
        self.radioButton_setToMat.setObjectName("radioButton_setToMat")
        self.verticalLayout.addWidget(self.radioButton_setToMat)
        self.radioButton_matToNpz = QtWidgets.QRadioButton(self.widget)
        self.radioButton_matToNpz.setObjectName("radioButton_matToNpz")
        self.verticalLayout.addWidget(self.radioButton_matToNpz)
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(30, 360, 451, 211))
        self.groupBox.setObjectName("groupBox")
        self.textEdit = QtWidgets.QTextEdit(self.groupBox)
        self.textEdit.setGeometry(QtCore.QRect(10, 20, 431, 181))
        self.textEdit.setObjectName("textEdit")
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(30, 570, 451, 61))
        self.groupBox_2.setObjectName("groupBox_2")
        self.pushButton_start = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_start.setGeometry(QtCore.QRect(310, 10, 131, 41))
        self.pushButton_start.setObjectName("pushButton_start")
        self.pushButton_stop = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_stop.setGeometry(QtCore.QRect(140, 10, 131, 41))
        self.pushButton_stop.setObjectName("pushButton_stop")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 497, 23))
        self.menubar.setObjectName("menubar")
        self.menuMain = QtWidgets.QMenu(self.menubar)
        self.menuMain.setObjectName("menuMain")
        self.menuImport_Data = QtWidgets.QMenu(self.menuMain)
        self.menuImport_Data.setObjectName("menuImport_Data")
        self.menuFrom_set = QtWidgets.QMenu(self.menuImport_Data)
        self.menuFrom_set.setObjectName("menuFrom_set")
        self.menuFrom_mat = QtWidgets.QMenu(self.menuImport_Data)
        self.menuFrom_mat.setObjectName("menuFrom_mat")
        self.menuEEG_Data_Precessing = QtWidgets.QMenu(self.menuMain)
        self.menuEEG_Data_Precessing.setObjectName("menuEEG_Data_Precessing")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        self.menuIntrod = QtWidgets.QMenu(self.menubar)
        self.menuIntrod.setObjectName("menuIntrod")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action = QtWidgets.QAction(MainWindow)
        self.action.setObjectName("action")
        self.actionusing_eeglab_of_matlab = QtWidgets.QAction(MainWindow)
        self.actionusing_eeglab_of_matlab.setObjectName("actionusing_eeglab_of_matlab")
        self.actionusing_mne_of_python = QtWidgets.QAction(MainWindow)
        self.actionusing_mne_of_python.setObjectName("actionusing_mne_of_python")
        self.actionCheck_Data_npz = QtWidgets.QAction(MainWindow)
        self.actionCheck_Data_npz.setObjectName("actionCheck_Data_npz")
        self.actionCheck_Data_mat = QtWidgets.QAction(MainWindow)
        self.actionCheck_Data_mat.setObjectName("actionCheck_Data_mat")
        self.actionCheck_Data_set = QtWidgets.QAction(MainWindow)
        self.actionCheck_Data_set.setObjectName("actionCheck_Data_set")
        self.actionversion = QtWidgets.QAction(MainWindow)
        self.actionversion.setObjectName("actionversion")
        self.actionsingle_file = QtWidgets.QAction(MainWindow)
        self.actionsingle_file.setObjectName("actionsingle_file")
        self.actiongroup_files = QtWidgets.QAction(MainWindow)
        self.actiongroup_files.setObjectName("actiongroup_files")
        self.actionsingle_file_2 = QtWidgets.QAction(MainWindow)
        self.actionsingle_file_2.setObjectName("actionsingle_file_2")
        self.actiongroup_files_2 = QtWidgets.QAction(MainWindow)
        self.actiongroup_files_2.setObjectName("actiongroup_files_2")
        self.menuFrom_set.addAction(self.actionsingle_file)
        self.menuFrom_set.addAction(self.actiongroup_files)
        self.menuFrom_mat.addAction(self.actionsingle_file_2)
        self.menuFrom_mat.addAction(self.actiongroup_files_2)
        self.menuImport_Data.addAction(self.menuFrom_set.menuAction())
        self.menuImport_Data.addAction(self.menuFrom_mat.menuAction())
        self.menuEEG_Data_Precessing.addAction(self.actionusing_eeglab_of_matlab)
        self.menuEEG_Data_Precessing.addAction(self.actionusing_mne_of_python)
        self.menuMain.addAction(self.menuImport_Data.menuAction())
        self.menuMain.addAction(self.menuEEG_Data_Precessing.menuAction())
        self.menuTools.addAction(self.actionCheck_Data_npz)
        self.menuTools.addAction(self.actionCheck_Data_mat)
        self.menuTools.addAction(self.actionCheck_Data_set)
        self.menuIntrod.addAction(self.actionversion)
        self.menubar.addAction(self.menuMain.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuIntrod.menuAction())


        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox_left_fileInfor.setTitle(_translate("MainWindow", "文件信息"))
        self.toolButton_filename.setText(_translate("MainWindow", "文件名"))
        self.toolButton_filepath.setText(_translate("MainWindow", "文件路径"))
        self.toolButton_filetype.setText(_translate("MainWindow", "文件类型"))
        self.toolButton_numChannels.setText(_translate("MainWindow", "导联数"))
        self.toolButton_numTrails.setText(_translate("MainWindow", "trail数"))
        self.toolButton_sampleRate.setText(_translate("MainWindow", "采样频率"))
        self.toolButton_samplenum_one.setText(_translate("MainWindow", "单样本采样点数"))
        self.textEdit_InforPrint.setHtml(_translate("MainWindow",
                                                    "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                                    "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                                    "p, li { white-space: pre-wrap; }\n"
                                                    "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
                                                    "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">正在操作文件~</p></body></html>"))
        self.groupBox_right_button.setTitle(_translate("MainWindow", "操作按钮"))
        self.pushButton_savepath.setText(_translate("MainWindow", "选择保存路径："))
        self.textEdit_zhuyi.setHtml(_translate("MainWindow",
                                               "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                               "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                               "p, li { white-space: pre-wrap; }\n"
                                               "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
                                               "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">注意：</p>\n"
                                               "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">如果需要批量处理，请选择文件夹包含以下要求</p>\n"
                                               "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">①文件夹包含多个被试，每个被试数据保存在一个文件夹中，必须是S1，S2等</p>\n"
                                               "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">②每个被试文件夹中只能包含一个文件，如.set或.mat</p>\n"
                                               "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">③保存路径为文件夹路径，处理完会自动新建被试文件夹，所以不要选择可能与其重名的路径，以免被覆盖</p></body></html>"))
        self.radioButton_setToMat.setText(_translate("MainWindow", "Set To npz"))
        self.radioButton_matToNpz.setText(_translate("MainWindow", "MAT To npz"))
        self.groupBox.setTitle(_translate("MainWindow", "信息打印"))
        self.textEdit.setHtml(_translate("MainWindow",
                                         "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                         "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                         "p, li { white-space: pre-wrap; }\n"
                                         "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
                                         "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">正在处理</p></body></html>"))
        self.groupBox_2.setTitle(_translate("MainWindow", "执行按钮"))
        self.pushButton_start.setText(_translate("MainWindow", "开始执行"))
        self.pushButton_stop.setText(_translate("MainWindow", "终止进程"))
        self.menuMain.setTitle(_translate("MainWindow", "菜单"))
        self.menuImport_Data.setTitle(_translate("MainWindow", "Import Data"))
        self.menuFrom_set.setTitle(_translate("MainWindow", "From set"))
        self.menuFrom_mat.setTitle(_translate("MainWindow", "From mat"))
        self.menuEEG_Data_Precessing.setTitle(_translate("MainWindow", "EEG Data Precessing"))
        self.menuTools.setTitle(_translate("MainWindow", "工具"))
        self.menuIntrod.setTitle(_translate("MainWindow", "介绍"))
        self.action.setText(_translate("MainWindow", " "))
        self.actionusing_eeglab_of_matlab.setText(_translate("MainWindow", "using eeglab of matlab"))
        self.actionusing_mne_of_python.setText(_translate("MainWindow", "using mne of python"))
        self.actionCheck_Data_npz.setText(_translate("MainWindow", "Check Data (*.npz)"))
        self.actionCheck_Data_mat.setText(_translate("MainWindow", "Check Data(*.mat)"))
        self.actionCheck_Data_set.setText(_translate("MainWindow", "Check Data(*.set)"))
        self.actionversion.setText(_translate("MainWindow", "version"))
        self.actionsingle_file.setText(_translate("MainWindow", "single file"))
        self.actiongroup_files.setText(_translate("MainWindow", "group files"))
        self.actionsingle_file_2.setText(_translate("MainWindow", "single file"))
        self.actiongroup_files_2.setText(_translate("MainWindow", "group files"))



